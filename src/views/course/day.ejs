<%- include('../partials/header.ejs', { title: 'Course Day' }) %>

<div class="row">
    <div class="col-12 col-lg-9">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/course">Course Notes</a></li>
                <li class="breadcrumb-item active" aria-current="page">Day <%= day.day %>: <%= day.title %></li>
            </ol>
        </nav>
        
        <h1><i class="bi bi-calendar"></i> Day <%= day.day %>: <%= day.title %></h1>
        
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Course Content</h5>
            </div>
            <div class="card-body">
                <div id="course-content">
                    <%- day.contentHtml %>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Your Notes for Day <%= day.day %></h5>
            </div>
            <div class="card-body">
                <form id="notes-form">
                    <input type="hidden" id="day-input" value="<%= day.id %>">
                    
                    <div class="mb-3">
                        <label for="notes-textarea" class="form-label">Your Notes</label>
                        <textarea class="form-control" id="notes-textarea" rows="6" placeholder="Add your notes here..."></textarea>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Save Notes
                    </button>
                </form>
                
                <div id="notes-display" class="mt-4">
                    <h5>Saved Notes</h5>
                    <div id="notes-list">
                        <!-- Notes will be displayed here -->
                        <p class="text-muted">No notes saved yet for this day.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="mt-3">
            <a href="/course" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to Course Overview
            </a>
        </div>
    </div>
    
    <!-- Table of Contents Sidebar -->
    <% if (day.headers && day.headers.length > 0) { %>
        <div class="col-12 col-lg-3">
            <div id="toc-sidebar" class="card sticky-top" style="top: 20px;">
                <div class="card-header">
                    <h5 class="mb-0">Table of Contents</h5>
                </div>
                <div class="card-body">
                    <nav id="table-of-contents">
                        <ul class="nav flex-column">
                            <% day.headers.forEach(header => { %>
                                <li class="nav-item toc-level-<%= header.level %>">
                                    <a class="nav-link toc-link" href="#<%= header.id %>">
                                        <%= header.text %>
                                    </a>
                                </li>
                            <% }); %>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    <% } %>
</div>

<!-- Back to Top Button -->
<div id="back-to-top" class="back-to-top-btn">
    <button class="btn btn-primary" onclick="scrollToTop()" title="Back to Top">
        <i class="bi bi-arrow-up"></i>
    </button>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const notesForm = document.getElementById('notes-form');
    const dayInput = document.getElementById('day-input');
    const notesTextarea = document.getElementById('notes-textarea');
    const notesList = document.getElementById('notes-list');
    const dayId = dayInput.value;
    const backToTopBtn = document.getElementById('back-to-top');
    
    // Load saved notes from localStorage
    loadNotes(dayId);
    
    notesForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const notes = notesTextarea.value;
        
        if (!notes) {
            alert('Please enter notes.');
            return;
        }
        
        // Save notes to localStorage
        saveNotes(dayId, notes);
        
        // Clear form
        notesTextarea.value = '';
        
        // Reload notes display
        loadNotes(dayId);
        
        alert('Notes saved successfully!');
    });
    
    // Show/hide back to top button with animation
    window.addEventListener('scroll', function() {
        if (backToTopBtn) {
            if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
                backToTopBtn.classList.add('show');
            } else {
                backToTopBtn.classList.remove('show');
            }
        }
        
        highlightActiveSection();
    });
    
    // Initialize highlighting
    highlightActiveSection();
});

function saveNotes(dayId, notes) {
    // Get existing notes for this day
    let savedNotes = JSON.parse(localStorage.getItem(`courseNotes_${dayId}`)) || [];
    
    // Add new note
    const timestamp = new Date().toLocaleString();
    savedNotes.push({
        text: notes,
        timestamp: timestamp
    });
    
    // Save to localStorage
    localStorage.setItem(`courseNotes_${dayId}`, JSON.stringify(savedNotes));
}

function loadNotes(dayId) {
    const savedNotes = JSON.parse(localStorage.getItem(`courseNotes_${dayId}`)) || [];
    
    if (savedNotes.length === 0) {
        notesList.innerHTML = '<p class="text-muted">No notes saved yet for this day.</p>';
        return;
    }
    
    let notesHTML = '';
    
    // Display notes in reverse chronological order (newest first)
    savedNotes.slice().reverse().forEach(note => {
        notesHTML += `<div class="border-start border-primary ps-3 mb-3">
            <p class="mb-1">${note.text}</p>
            <small class="text-muted">${note.timestamp}</small>
        </div>`;
    });
    
    notesList.innerHTML = notesHTML;
}

function scrollToTop() {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
}

function highlightActiveSection() {
    const headers = document.querySelectorAll('#course-content h1[id], #course-content h2[id], #course-content h3[id], #course-content h4[id], #course-content h5[id], #course-content h6[id]');
    const tocLinks = document.querySelectorAll('.toc-link');
    
    // Remove active class from all links
    tocLinks.forEach(link => {
        link.classList.remove('active');
    });
    
    if (headers.length === 0) return;
    
    let currentHeaderId = '';
    
    // Find the header that is currently in view
    for (let i = headers.length - 1; i >= 0; i--) {
        const header = headers[i];
        const rect = header.getBoundingClientRect();
        if (rect.top <= 150) { // Adjust this value as needed
            currentHeaderId = header.id;
            break;
        }
    }
    
    // Add active class to the current link
    if (currentHeaderId) {
        const activeLink = document.querySelector(`.toc-link[href="#${currentHeaderId}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
    }
}
</script>

<style>
.toc-level-1 {
    margin-left: 0;
}

.toc-level-2 {
    margin-left: 15px;
}

.toc-level-3 {
    margin-left: 30px;
}

.toc-level-4 {
    margin-left: 45px;
}

.toc-level-5 {
    margin-left: 60px;
}

.toc-level-6 {
    margin-left: 75px;
}

.toc-link {
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
}

.toc-link:hover {
    background-color: #e9ecef;
}

.toc-link.active {
    background-color: #007bff;
    color: white;
}

/* Back to Top Button - Enhanced Design */
.back-to-top-btn {
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 1000;
    display: none;
    opacity: 0;
    transition: all 0.3s ease;
    transform: translateY(20px);
}

.back-to-top-btn.show {
    opacity: 1;
    transform: translateY(0);
}

.back-to-top-btn .btn {
    width: 55px;
    height: 55px;
    border-radius: 50%;
    background: #007bff;
    color: white;
    border: none;
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    font-size: 1.2rem;
}

.back-to-top-btn .btn:hover {
    background: #0056b3;
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 123, 255, 0.4);
}

.back-to-top-btn .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
}

/* Add animation to the arrow icon */
.back-to-top-btn .bi {
    transition: transform 0.3s ease;
}

.back-to-top-btn .btn:hover .bi {
    transform: translateY(-2px);
}
</style>

<%- include('../partials/footer.ejs') %>