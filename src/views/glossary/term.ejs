<%- include('../partials/header.ejs', { title: term.title }) %>

<div class="container my-5">
    <div class="row">
        <div class="col-12 col-lg-9">
            <!-- Enhanced header with better styling -->
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center glossary-term-header mb-4">
                <div>
                    <h1 class="mb-2">
                        <i class="bi bi-book me-2"></i> 
                        <%= term.title %>
                    </h1>
                    <span class="badge bg-primary glossary-category-badge fs-6">
                        <i class="bi bi-tag me-1"></i>
                        <%= t('glossary.categories.' + term.category.replace(/[^a-zA-Z0-9]+/g, '_')) || term.category %>
                    </span>
                </div>
                <div class="mt-3 mt-md-0">
                    <button class="btn btn-outline-secondary" onclick="window.print()">
                        <i class="bi bi-printer me-1"></i> Print
                    </button>
                </div>
            </div>
            
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body">
                    <!-- Full content section -->
                    <div class="mb-4">
                        <div class="glossary-content">
                            <%- term.fullContentHtml %>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Related Terms section -->
            <% if (typeof relatedTerms !== 'undefined' && relatedTerms.length > 0) { %>
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-light py-3">
                        <h5 class="mb-0">
                            <i class="bi bi-link-45deg me-2"></i> 
                            Related Terms
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <% relatedTerms.forEach(relatedTerm => { %>
                                <div class="col-md-6 col-lg-4">
                                    <% if (relatedTerm.language === 'vi') { %>
                                        <a href="/glossary/term/vi/<%= relatedTerm.fileKey.replace('vi/', '') || relatedTerm.term.toLowerCase().replace(/\s+/g, '-') %>" 
                                           class="btn btn-outline-info w-100 text-start related-term-btn d-flex align-items-center">
                                            <i class="bi bi-bookmark me-2"></i> 
                                            <span class="text-truncate">
                                                <%= relatedTerm.title.replace('[VI] ', '') %>
                                            </span>
                                        </a>
                                    <% } else { %>
                                        <a href="/glossary/term/<%= relatedTerm.fileKey || relatedTerm.term.toLowerCase().replace(/\s+/g, '-') %>" 
                                           class="btn btn-outline-info w-100 text-start related-term-btn d-flex align-items-center">
                                            <i class="bi bi-bookmark me-2"></i> 
                                            <span class="text-truncate">
                                                <%= relatedTerm.title %>
                                            </span>
                                        </a>
                                    <% } %>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            <% } %>
            
            <!-- Navigation buttons -->
            <div class="d-flex justify-content-between">
                <a href="/glossary" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-1"></i> 
                    Back to Glossary
                </a>
            </div>
        </div>
        
        <!-- Table of Contents Sidebar -->
        <% if (term.headers && term.headers.length > 0) { %>
            <div class="col-12 col-lg-3">
                <div id="toc-sidebar" class="card sticky-top border-0 shadow-sm" style="top: 20px;">
                    <div class="card-header bg-light py-3">
                        <h5 class="mb-0">
                            <i class="bi bi-list me-2"></i> 
                            Contents
                        </h5>
                    </div>
                    <div class="card-body">
                        <nav id="table-of-contents">
                            <ul class="nav flex-column">
                                <% term.headers.forEach(header => { %>
                                    <li class="nav-item toc-level-<%= header.level %> mb-1">
                                        <a class="nav-link toc-link py-2 px-3 rounded" href="#<%= header.id %>">
                                            <%= header.text %>
                                        </a>
                                    </li>
                                <% }); %>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        <% } %>
    </div>
</div>

<!-- Back to Top Button -->
<div id="back-to-top" class="back-to-top-btn">
    <button class="btn btn-primary rounded-circle shadow" onclick="scrollToTop()" title="Back to Top">
        <i class="bi bi-arrow-up"></i>
    </button>
</div>

<!-- Add clipboard.js for copy functionality -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.8/clipboard.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const backToTopBtn = document.getElementById('back-to-top');
    
    // Initialize clipboard.js for any code blocks with custom text processing
    const clipboard = new ClipboardJS('.copy-btn', {
        text: function(trigger) {
            // Get the raw clipboard text from data attribute
            let clipboardText = trigger.getAttribute('data-clipboard-text');
            
            // Process escaped newlines
            if (clipboardText) {
                clipboardText = clipboardText.replace(/\\n/g, '\n');
            }
            
            return clipboardText;
        }
    });
    
    // Add success and error handlers
    clipboard.on('success', function(e) {
        const originalText = e.trigger.innerHTML;
        e.trigger.innerHTML = '<i class="bi bi-check"></i>';
        e.trigger.classList.remove('btn-outline-primary');
        e.trigger.classList.add('btn-success');
        
        // Add tooltip text
        e.trigger.setAttribute('data-bs-toggle', 'tooltip');
        e.trigger.setAttribute('data-bs-placement', 'top');
        e.trigger.setAttribute('title', 'Copied!');
        // Initialize tooltip if Bootstrap is available
        if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
            new bootstrap.Tooltip(e.trigger);
        }
        
        setTimeout(function() {
            e.trigger.innerHTML = originalText;
            e.trigger.classList.remove('btn-success');
            e.trigger.classList.add('btn-outline-primary');
            e.trigger.removeAttribute('data-bs-toggle');
            e.trigger.removeAttribute('data-bs-placement');
            e.trigger.removeAttribute('title');
        }, 2000);
        
        e.clearSelection();
    });
    
    clipboard.on('error', function(e) {
        const originalText = e.trigger.innerHTML;
        e.trigger.innerHTML = '<i class="bi bi-exclamation-triangle"></i>';
        e.trigger.classList.remove('btn-outline-primary');
        e.trigger.classList.add('btn-danger');
        
        // Add tooltip text
        e.trigger.setAttribute('data-bs-toggle', 'tooltip');
        e.trigger.setAttribute('data-bs-placement', 'top');
        e.trigger.setAttribute('title', 'Copy failed!');
        // Initialize tooltip if Bootstrap is available
        if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
            new bootstrap.Tooltip(e.trigger);
        }
        
        setTimeout(function() {
            e.trigger.innerHTML = originalText;
            e.trigger.classList.remove('btn-danger');
            e.trigger.classList.add('btn-outline-primary');
            e.trigger.removeAttribute('data-bs-toggle');
            e.trigger.removeAttribute('data-bs-placement');
            e.trigger.removeAttribute('title');
        }, 2000);
    });
    
    // Show/hide back to top button with animation
    window.addEventListener('scroll', function() {
        if (backToTopBtn) {
            if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {
                backToTopBtn.classList.add('show');
            } else {
                backToTopBtn.classList.remove('show');
            }
        }
        
        highlightActiveSection();
    });
    
    // Initialize highlighting
    highlightActiveSection();
});

function scrollToTop() {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
}

function highlightActiveSection() {
    const headers = document.querySelectorAll('.glossary-content h1[id], .glossary-content h2[id], .glossary-content h3[id], .glossary-content h4[id], .glossary-content h5[id], .glossary-content h6[id]');
    const tocLinks = document.querySelectorAll('.toc-link');
    
    // Remove active class from all links
    tocLinks.forEach(link => {
        link.classList.remove('active');
    });
    
    if (headers.length === 0) return;
    
    let currentHeaderId = '';
    
    // Find the header that is currently in view
    for (let i = headers.length - 1; i >= 0; i--) {
        const header = headers[i];
        const rect = header.getBoundingClientRect();
        if (rect.top <= 150) { // Adjust this value as needed
            currentHeaderId = header.id;
            break;
        }
    }
    
    // Add active class to the current link
    if (currentHeaderId) {
        const activeLink = document.querySelector(`.toc-link[href="#${currentHeaderId}"]`);
        if (activeLink) {
            activeLink.classList.add('active');
        }
    }
}
</script>

<style>
.toc-level-1 {
    margin-left: 0;
}

.toc-level-2 {
    margin-left: 15px;
}

.toc-level-3 {
    margin-left: 30px;
}

.toc-level-4 {
    margin-left: 45px;
}

.toc-level-5 {
    margin-left: 60px;
}

.toc-level-6 {
    margin-left: 75px;
}

.toc-link {
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
    color: #6c757d;
}

.toc-link:hover {
    background-color: #e9ecef;
    color: #0d6efd;
}

.toc-link.active {
    background-color: #0d6efd;
    color: white;
}

/* Back to Top Button - Enhanced Design */
.back-to-top-btn {
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 1000;
    display: none;
    opacity: 0;
    transition: all 0.3s ease;
    transform: translateY(20px);
}

.back-to-top-btn.show {
    opacity: 1;
    transform: translateY(0);
}

.back-to-top-btn .btn {
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    font-size: 1.2rem;
}

.back-to-top-btn .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 15px rgba(0, 123, 255, 0.4);
}

.back-to-top-btn .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
}

/* Code block copy button styles */
.code-block-wrapper {
    position: relative;
    margin: 1rem 0;
    border-radius: 0.5rem;
    overflow: hidden;
    transition: box-shadow 0.2s ease;
    background-color: #f8f9fa;
}

.code-block-wrapper:hover {
    box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.1);
}

.code-block-wrapper .copy-btn {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    z-index: 10;
    opacity: 0;
    transition: all 0.2s ease;
    background-color: rgba(255, 255, 255, 0.95);
    border: 1px solid rgba(0, 0, 0, 0.1);
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
    border-radius: 0.375rem;
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-weight: 500;
    color: #495057;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.05);
}

.code-block-wrapper:hover .copy-btn {
    opacity: 1;
}

.code-block-wrapper .copy-btn:hover {
    background-color: #0d6efd;
    color: white;
    border-color: #0d6efd;
    transform: translateY(-1px);
    box-shadow: 0 0.25rem 0.5rem rgba(13, 110, 253, 0.25);
}

.code-block-wrapper .copy-btn.btn-success {
    background-color: #198754;
    border-color: #198754;
    color: white;
}

.code-block-wrapper .copy-btn.btn-danger {
    background-color: #dc3545;
    border-color: #dc3545;
    color: white;
}

.code-block-wrapper pre {
    margin: 0;
    border-radius: 0.5rem;
    background-color: #f8f9fa;
}

.code-block-wrapper code {
    background-color: transparent;
}

/* Related terms button styling */
.related-term-btn {
    transition: all 0.2s ease;
}

.related-term-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}

/* Glossary content styling */
.glossary-content h1, 
.glossary-content h2, 
.glossary-content h3, 
.glossary-content h4, 
.glossary-content h5, 
.glossary-content h6 {
    margin-top: 2rem;
    margin-bottom: 1rem;
    scroll-margin-top: 80px;
}

.glossary-content p {
    line-height: 1.7;
    margin-bottom: 1rem;
}

.glossary-content ul, 
.glossary-content ol {
    margin-bottom: 1rem;
    padding-left: 1.5rem;
}

.glossary-content li {
    margin-bottom: 0.5rem;
}

.glossary-content code {
    background-color: #f8f9fa;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
}

.glossary-content pre {
    background-color: #f8f9fa;
    border-radius: 0.375rem;
    padding: 1rem;
    margin: 1rem 0;
    overflow-x: auto;
}

.glossary-content blockquote {
    border-left: 4px solid #0d6efd;
    padding: 0.5rem 1rem;
    margin: 1rem 0;
    background-color: #f8f9fa;
    border-radius: 0 0.375rem 0.375rem 0;
}

.glossary-content table {
    width: 100%;
    margin: 1rem 0;
    border-collapse: collapse;
}

.glossary-content table th,
.glossary-content table td {
    padding: 0.75rem;
    vertical-align: top;
    border: 1px solid #dee2e6;
}

.glossary-content table th {
    background-color: #f8f9fa;
    font-weight: 600;
}
</style>

<%- include('../partials/footer.ejs') %>